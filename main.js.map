{"version":3,"sources":["./src/environments/environment.ts","./src/app/tagify/angular-tagify.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/services/firebase.service.ts","./src/app/app.module.ts","./src/app/list/list.component.ts","./src/app/list/list.component.html","./src/app/form/form.component.ts","./src/app/form/form.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n\n  // TODO don't store here ..\n  firebase: {\n    \"apiKey\": \"AIzaSyAW_6zYywvUy67RXZwGiMZ3R_jsSykygmc\",\n    \"authDomain\": \"mood-85e71.firebaseapp.com\",\n    \"projectId\": \"mood-85e71\",\n    \"storageBucket\": \"mood-85e71.appspot.com\",\n    \"messagingSenderId\": \"81154981835\",\n    \"appId\": \"1:81154981835:web:712f625042460cd47b004e\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {AfterViewInit, Component, EventEmitter, forwardRef, Input, Output, ViewChild} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport * as Tagify from '@yaireo/tagify';\n\nexport interface SettingsModel {\n  placeholder?: string;\n  delimiters?: string;\n  pattern?: string | RegExp;\n  mode?: string;\n  mixTagsInterpolator?: string[];\n  mixTagsAllowedAfter?: RegExp;\n  duplicates?: boolean;\n  enforceWhitelist?: boolean;\n  autoComplete?: {\n      enabled?: boolean;\n      rightKey?: boolean;\n  };\n  whitelist?: string[] | Object[];\n  blacklist?: string[] | Object[];\n  addTagOnBlur?: boolean;\n  callbacks?: Object;\n  maxTags?: number;\n  editTags?: number;\n  templates?: {\n      wrapper?: Function;\n      tag?: Function;\n      dropdownItem?: Function;\n      dropdownItemNoMatch?: Function;\n  };\n  transformTag?: Function;\n  keepInvalidTags?: boolean;\n  skipInvalid?: boolean;\n  backspace?: any;\n  originalInputValueFormat?: Function;\n  dropdown?: {\n      enabled?: number | false;\n      caseSensitive?: boolean;\n      maxItems?: number;\n      classname?: string;\n      fuzzySearch?: boolean;\n      accentedSearch?: boolean;\n      position?: string;\n      highlightFirst?: boolean;\n      closeOnSelect?: boolean;\n      mapValueTo?: string | Function;\n      searchKeys?: string[];\n      appendTarget?: any;\n  };\n}\n\n@Component({\n  selector: 'tagify',\n  template: `<input *ngIf=\"settings\" #tagifyInputRef/>`,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TagifyComponent),\n      multi: true\n    }\n  ]\n})\nexport class TagifyComponent implements AfterViewInit, ControlValueAccessor {\n  @Output() add = new EventEmitter(); // returns the added tag + updated tags list\n  @Output() remove = new EventEmitter(); // returns the updated tags list\n  @Input() settings: SettingsModel; // get possible tagify settings\n  @Input() value: string | Array<string>\n\n  @ViewChild('tagifyInputRef') tagifyInputRef: any;\n\n  private onChange: any = null;\n  private onTouched: any = null;\n\n  private tagify;\n\n  ngAfterViewInit() {\n    if (!this.settings) {\n      return;\n    }\n    this.settings.callbacks = {\n      add: () => {\n        this.add.emit({\n          tags: this.tagify.value,\n          added: this.tagify.value[this.tagify.value.length - 1]\n        });\n\n        if (this.onChange !== null)\n          this.onChange(this.tagify.value);\n      },\n      remove: () => {\n        this.remove.emit(this.tagify.value);\n\n        if (this.onChange !== null)\n          this.onChange(this.tagify.value);\n      }\n    };\n\n    this.tagify = new Tagify(this.tagifyInputRef.nativeElement, this.settings);\n\n    if (this.value) {\n      const value = this.value;\n      setTimeout(() => this.addTags(value));\n    }\n  }\n\n  ngOnChanges({ value }) {\n    if(!this.tagify) return\n    if (!value.previousValue) {\n      this.tagify.loadOriginalValues(value.currentValue)\n    }\n  }\n\n  /**\n   * @description removes all tags\n   */\n  removeAll() {\n    this.tagify.removeAllTags();\n  }\n\n  /**\n   * @description add multiple tags\n   */\n  addTags(tags) {\n    this.tagify.addTags(tags);\n  }\n\n  /**\n   * @description destroy dom and everything\n   */\n  destroy() {\n    this.tagify.destroy();\n  }\n\n  writeValue(value) {\n    if (value == null)\n      return;\n    this.value = value;\n\n    if (!this.tagify)\n      // Not yet rendered.\n      return;\n\n    this.removeAll();\n    this.addTags(value as string[]);\n  }\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","<mat-sidenav-container class=\"example-container\">\n  <mat-sidenav mode=\"side\" opened>\n    <mat-nav-list>\n      <mat-list-item routerLink=\"/form\" routerLinkActive=\"active-list-item\">Report</mat-list-item>\n      <mat-list-item routerLink=\"/list\" routerLinkActive=\"active-list-item\">List</mat-list-item>\n    </mat-nav-list>\n  </mat-sidenav>\n\n  <mat-sidenav-content>\n    <router-outlet></router-outlet>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Injectable } from '@angular/core';\n\nimport { AngularFirestore, AngularFirestoreDocument, DocumentChangeAction, DocumentReference, DocumentSnapshot } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\n\nexport interface Emotion { id?: string, name: string };\nexport interface Activity { id?: string, count: number };\nexport interface Entry {\n  createdAt: Date,\n  emotions: Record<string, number>,\n  activities: string[]\n}\n\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class FirebaseService {\n\n  constructor(public db: AngularFirestore) { }\n\n  get emotions() {\n    return this.db.collection(\"emotions\")\n      .snapshotChanges() as Observable<DocumentChangeAction<Emotion>[]>;\n  }\n\n  get activities() {\n    return this.db.collection(\"activities\")\n      .snapshotChanges() as Observable<DocumentChangeAction<Activity>[]>;\n  }\n\n  getRecentEntries(limit = 50): Observable<Entry[]> {\n    return this.db.collection(\"entries\", ref => ref.orderBy(\"createdAt\", \"desc\").limit(limit))\n      .valueChanges() as Observable<Entry[]>;\n  }\n\n  /**\n   * Retrieve an activity document, creating if necessary.\n   */\n  async getActivity(name: string): Promise<AngularFirestoreDocument> {\n    let doc = this.db.collection(\"activities\").doc(name);\n\n    let docSnapshot = await doc.get().toPromise();\n    if (!(docSnapshot && docSnapshot.exists)) {\n      // Create the document\n      doc.set({createdAt: new Date()});\n    }\n\n    return doc;\n  }\n\n  async addEntry(entry: any) {\n    entry.createdAt = new Date();\n    console.log(entry);\n\n    // TODO run this in a transaction?\n    // Get documents for each activity\n    entry.activities.forEach((activity: string) => {\n      var activityDoc: AngularFirestoreDocument<Activity> =\n        this.db.collection(\"activities\").doc(activity);\n      activityDoc.get().subscribe(doc => {\n        var count = doc.exists ? doc.data().count || 0 : 0;\n        activityDoc.set({count: count + 1}, {merge: true});\n      })\n    });\n\n    this.db.collection(\"entries\").add(entry);\n  }\n\n}\n","import { environment } from '../environments/environment';\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatTableModule } from '@angular/material/table';\n\nimport { TagifyComponent } from './tagify/angular-tagify.component';\n\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { FormComponent } from './form/form.component';\nimport { ListComponent } from './list/list.component';\n\n \n@NgModule({\n  declarations: [\n    AppComponent,\n    FormComponent,\n    TagifyComponent,\n    ListComponent,\n  ],\n  imports: [\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFirestoreModule,\n\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n\n    MatFormFieldModule,\n    MatButtonModule,\n    MatInputModule,\n    MatDialogModule,\n    MatSliderModule,\n    MatSidenavModule,\n    MatListModule,\n    MatTableModule,\n    AppRoutingModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Entry, FirebaseService } from '../services/firebase.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n\n  entries: Entry[];\n  displayedColumns = [\"createdAt\", \"activities\"];\n\n  constructor(private firebase: FirebaseService) { }\n\n  ngOnInit(): void {\n    this.firebase.getRecentEntries().subscribe((entries) => {\n      this.entries = entries;\n    })\n  }\n\n}\n","<table mat-table [dataSource]=\"entries\">\n  <ng-container matColumnDef=\"createdAt\">\n    <th mat-header-cell *matHeaderCellDef>Datetime</th>\n    <td mat-cell *matCellDef=\"let element\">{{element.createdAt.toDate() | date: 'yyyy-MM-dd HH:MM'}}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"activities\">\n    <th mat-header-cell *matHeaderCellDef>Activities</th>\n    <td mat-cell *matCellDef=\"let element\">\n      <span *ngFor=\"let activity of element.activities\">\n        {{activity}}\n      </span>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","import { Component, OnInit } from '@angular/core';\n\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\n\nimport { SettingsModel } from '../tagify/angular-tagify.component';\n\nimport { FirebaseService } from '../services/firebase.service';\nimport { Router } from '@angular/router';\n\n\nexport interface Emotion {\n  id: string,\n  name: string,\n}\n\nexport interface Activity {\n  id: string\n}\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\nexport class FormComponent implements OnInit {\n  entryForm!: FormGroup;\n  emotions: Emotion[] = [];\n  get emotionControls() {\n    return this.entryForm.get(\"emotions\") as FormGroup;\n  }\n\n  tagifySettings: SettingsModel = {\n    autoComplete: { enabled: true, rightKey: true },\n    whitelist: []\n  };\n  activitiesReady = false;\n\n  validation_messages = {\n    name: [\n      {type: \"required\", message: \"Name is required\"}\n    ]\n  }\n\n  constructor(private fb: FormBuilder,\n              private firebase: FirebaseService,\n              private router: Router) { }\n\n  ngOnInit(): void {\n    const emotionGroup: {[key: string]: any} = {};\n\n    // Generate a form group based on available emotions.\n    this.firebase.emotions.subscribe(emotions => {\n      // Sort by name.\n      emotions.sort((a, b) => a.payload.doc.id > b.payload.doc.id ? 1 : -1);\n\n      emotions.forEach((e: any) => {\n        const doc = e.payload.doc;\n\n        this.emotions.push(Object.assign({id: doc.id}, doc.data()));\n        emotionGroup[doc.id] = this.fb.control(\"\");\n      });\n\n      this.entryForm = this.fb.group({\n        activities: [],\n        emotions: this.fb.group(emotionGroup),\n      });\n    });\n\n    this.firebase.activities.subscribe(activitySnapshots => {\n      this.tagifySettings.whitelist = activitySnapshots.map(a => a.payload.doc.id);\n      this.activitiesReady = true;\n    })\n  }\n\n  onSubmit(value: {[key: string]: any}) {\n    value.activities = value.activities ? value.activities.map(el => el.value) : [];\n\n    // Remove emotions which were not set.\n    value.emotions = Object.entries(value.emotions)\n      .filter((item) => item[1] != \"\")\n      .reduce((obj, item) => {\n        obj[item[0]] = item[1];\n        return obj;\n      }, {})\n      \n    this.firebase.addEntry(value).then(res => {\n      this.router.navigate([\"/list\"]);\n    });\n  }\n\n}\n","<div class=\"container\">\n\n<form class=\"create-form\" *ngIf=\"entryForm\" [formGroup]=\"entryForm\" novalidate (ngSubmit)=\"onSubmit(entryForm.value)\">\n\n  <h3>Emotions</h3>\n  <div formGroupName=\"emotions\" *ngFor=\"let emotion of emotions\">\n    <div layout=\"row\">\n      <div layout-align=\"center center\">\n        <span class=\"md-body-1\">{{emotion.id}}</span>\n      </div>\n      <mat-slider md-discrete thumbLabel step=\"1\" min=\"1\" max=\"7\" tickInterval=\"1\" [formControlName]=\"emotion.id\"></mat-slider>\n    </div>\n  </div>\n\n  <h3>Activities</h3>\n  <tagify *ngIf=\"activitiesReady\" [settings]=\"tagifySettings\" formControlName=\"activities\"></tagify>\n\n  <div class=\"row submit-button-container\">\n    <div class=\"col-md-4\">\n      <button mat-raised-button class=\"submit-button\" color=\"primary\" type=\"submit\" [disabled]=\"!entryForm.valid\">Create</button>\n    </div>\n  </div>\n\n</form>\n\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { FormComponent } from './form/form.component';\nimport { ListComponent } from './list/list.component';\n\n\nconst routes: Routes = [\n  { path: \"form\", component: FormComponent },\n  { path: \"list\", component: ListComponent },\n\n  { path: \"\", redirectTo: \"list\", pathMatch: \"full\" },\n];\n\n\n@NgModule({\n  declarations: [],\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}